(()=>{var c=class{constructor(){this.socket=null,this.connected=!1,this.messageQueue=[],self.onmessage=e=>{let{type:s,data:t}=e.data;switch(s){case"connect":this.connect(t.url);break;case"send":this.sendMessage(t);break;case"disconnect":this.disconnect();break}}}connect(e){this.connected||(this.socket=new WebSocket(e),this.socket.onopen=()=>{this.connected=!0,this.postMessage({type:"status",data:{status:"connected"}}),this.flushMessageQueue()},this.socket.onmessage=s=>{let t=JSON.parse(s.data);this.postMessage({type:"message",data:t})},this.socket.onclose=()=>{this.connected=!1,this.postMessage({type:"status",data:{status:"disconnected"}})},this.socket.onerror=s=>{this.postMessage({type:"error",data:{error:s.toString()}})})}sendMessage(e){let s=JSON.stringify(e);this.connected&&this.socket.readyState===WebSocket.OPEN?this.socket.send(s):this.messageQueue.push(s)}flushMessageQueue(){for(;this.messageQueue.length>0;){let e=this.messageQueue.shift();if(this.socket.readyState===WebSocket.OPEN)this.socket.send(e);else{this.messageQueue.unshift(e);break}}}disconnect(){this.socket&&(this.socket.close(),this.socket=null),this.connected=!1}postMessage(e){self.postMessage(e)}};new c;})();
//# sourceMappingURL=arizona-worker.min.js.map
