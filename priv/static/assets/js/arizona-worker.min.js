(()=>{function u(e,t){if(e[0]==="template"&&e.length===3){let n=e[1],o=[...e[2]];return p(n,o,t)}else if(e[0]==="list"&&e.length===3){let n=e[1],o=[...e[2]];return k(n,o)}else return e}function p(e,t,n){return t=b(t,n),l(e,t,n)}function k(e,t){return t.forEach(n=>l(e,n))}function b(e,t){if(!t)return e;for(let[n,o]of Object.entries(t))typeof o=="object"&&!Array.isArray(o)?e[n]=u(e[n],o):e[n]=o;return e}function l(e,t,n){let o="";for(let c=0;c<Math.max(e.length,t.length);c++)o+=`${e[c]??""}${u(t[c]??"",n?n[c]:null)}`;return o}var r={queryParams:{},socket:null,views:[],eventQueue:[]};self.onmessage=function(e){let{data:t}=e;if(console.info("[WebWorker] client sent:",t),typeof t!="object"||!t.subject){console.error("[WebWorker] invalid message format:",t);return}switch(t.subject){case"connect":{let{ref:n,queryParams:o}=t.attachment;g(n,o);break}default:h(t)}};function g(e,t){return new Promise(n=>{let o=v(t),c=new WebSocket(o);r.queryParams=t,r.socket=c,c.onopen=function(){console.info("[WebSocket] connected:",r);let s=[...r.eventQueue];r.eventQueue.length=0,s.forEach(h),i(e,void 0,"connected",!0),n()},c.onclose=function(s){console.info("[WebSocket] disconnected:",s),i(e,void 0,"connected",!1)},c.onmessage=function(s){console.info("[WebSocket] msg:",s.data);let a=JSON.parse(s.data);Array.isArray(a)?a.forEach(f):f(a)}})}function f(e){let t=e[0],[n,o,c]=e[1];switch(t){case"init":{r.views=c;break}case"patch":{let s=r.views[o],a=u(s,c);i(n,o,"patch",a);break}default:{i(n,o,t,c);break}}}function i(e,t,n,o){self.postMessage({ref:e,viewId:t,eventName:n,payload:o})}function h({subject:e,attachment:t}){m()?r.socket.send(JSON.stringify([e,t])):(r.eventQueue.push({subject:e,attachment:t}),console.warn("[WebSocket] not ready to send messages"))}function m(){return r.socket.readyState===WebSocket.OPEN}function v(e){let t="ws",n=location.host,o="/websocket",c=`?${Object.keys(e).map(s=>`${s}=${encodeURIComponent(e[s])}`).join("&")}`;return`${t}://${n}${o}${c}`}})();
//# sourceMappingURL=arizona-worker.min.js.map
