var q = 11;
function ie(a, e) {
  var t = e.attributes, n, r, c, f, p;
  if (!(e.nodeType === q || a.nodeType === q)) {
    for (var b = t.length - 1; b >= 0; b--)
      n = t[b], r = n.name, c = n.namespaceURI, f = n.value, c ? (r = n.localName || r, p = a.getAttributeNS(c, r), p !== f && (n.prefix === "xmlns" && (r = n.name), a.setAttributeNS(c, r, f))) : (p = a.getAttribute(r), p !== f && a.setAttribute(r, f));
    for (var T = a.attributes, y = T.length - 1; y >= 0; y--)
      n = T[y], r = n.name, c = n.namespaceURI, c ? (r = n.localName || r, e.hasAttributeNS(c, r) || a.removeAttributeNS(c, r)) : e.hasAttribute(r) || a.removeAttribute(r);
  }
}
var _, se = "http://www.w3.org/1999/xhtml", u = typeof document > "u" ? void 0 : document, le = !!u && "content" in u.createElement("template"), de = !!u && u.createRange && "createContextualFragment" in u.createRange();
function ce(a) {
  var e = u.createElement("template");
  return e.innerHTML = a, e.content.childNodes[0];
}
function oe(a) {
  _ || (_ = u.createRange(), _.selectNode(u.body));
  var e = _.createContextualFragment(a);
  return e.childNodes[0];
}
function fe(a) {
  var e = u.createElement("body");
  return e.innerHTML = a, e.childNodes[0];
}
function he(a) {
  return a = a.trim(), le ? ce(a) : de ? oe(a) : fe(a);
}
function z(a, e) {
  var t = a.nodeName, n = e.nodeName, r, c;
  return t === n ? !0 : (r = t.charCodeAt(0), c = n.charCodeAt(0), r <= 90 && c >= 97 ? t === n.toUpperCase() : c <= 90 && r >= 97 ? n === t.toUpperCase() : !1);
}
function ue(a, e) {
  return !e || e === se ? u.createElement(a) : u.createElementNS(e, a);
}
function ve(a, e) {
  for (var t = a.firstChild; t; ) {
    var n = t.nextSibling;
    e.appendChild(t), t = n;
  }
  return e;
}
function W(a, e, t) {
  a[t] !== e[t] && (a[t] = e[t], a[t] ? a.setAttribute(t, "") : a.removeAttribute(t));
}
var j = {
  OPTION: function(a, e) {
    var t = a.parentNode;
    if (t) {
      var n = t.nodeName.toUpperCase();
      n === "OPTGROUP" && (t = t.parentNode, n = t && t.nodeName.toUpperCase()), n === "SELECT" && !t.hasAttribute("multiple") && (a.hasAttribute("selected") && !e.selected && (a.setAttribute("selected", "selected"), a.removeAttribute("selected")), t.selectedIndex = -1);
    }
    W(a, e, "selected");
  },
  /**
   * The "value" attribute is special for the <input> element since it sets
   * the initial value. Changing the "value" attribute without changing the
   * "value" property will have no effect since it is only used to the set the
   * initial value.  Similar for the "checked" attribute, and "disabled".
   */
  INPUT: function(a, e) {
    W(a, e, "checked"), W(a, e, "disabled"), a.value !== e.value && (a.value = e.value), e.hasAttribute("value") || a.removeAttribute("value");
  },
  TEXTAREA: function(a, e) {
    var t = e.value;
    a.value !== t && (a.value = t);
    var n = a.firstChild;
    if (n) {
      var r = n.nodeValue;
      if (r == t || !t && r == a.placeholder)
        return;
      n.nodeValue = t;
    }
  },
  SELECT: function(a, e) {
    if (!e.hasAttribute("multiple")) {
      for (var t = -1, n = 0, r = a.firstChild, c, f; r; )
        if (f = r.nodeName && r.nodeName.toUpperCase(), f === "OPTGROUP")
          c = r, r = c.firstChild, r || (r = c.nextSibling, c = null);
        else {
          if (f === "OPTION") {
            if (r.hasAttribute("selected")) {
              t = n;
              break;
            }
            n++;
          }
          r = r.nextSibling, !r && c && (r = c.nextSibling, c = null);
        }
      a.selectedIndex = t;
    }
  }
}, N = 1, Q = 11, Y = 3, J = 8;
function A() {
}
function pe(a) {
  if (a)
    return a.getAttribute && a.getAttribute("id") || a.id;
}
function ge(a) {
  return function(t, n, r) {
    if (r || (r = {}), typeof n == "string")
      if (t.nodeName === "#document" || t.nodeName === "HTML" || t.nodeName === "BODY") {
        var c = n;
        n = u.createElement("html"), n.innerHTML = c;
      } else
        n = he(n);
    else n.nodeType === Q && (n = n.firstElementChild);
    var f = r.getNodeKey || pe, p = r.onBeforeNodeAdded || A, b = r.onNodeAdded || A, T = r.onBeforeElUpdated || A, y = r.onElUpdated || A, Z = r.onBeforeNodeDiscarded || A, R = r.onNodeDiscarded || A, ee = r.onBeforeElChildrenUpdated || A, te = r.skipFromChildren || A, F = r.addChild || function(i, s) {
      return i.appendChild(s);
    }, D = r.childrenOnly === !0, S = /* @__PURE__ */ Object.create(null), L = [];
    function M(i) {
      L.push(i);
    }
    function G(i, s) {
      if (i.nodeType === N)
        for (var o = i.firstChild; o; ) {
          var l = void 0;
          s && (l = f(o)) ? M(l) : (R(o), o.firstChild && G(o, s)), o = o.nextSibling;
        }
    }
    function O(i, s, o) {
      Z(i) !== !1 && (s && s.removeChild(i), R(i), G(i, o));
    }
    function H(i) {
      if (i.nodeType === N || i.nodeType === Q)
        for (var s = i.firstChild; s; ) {
          var o = f(s);
          o && (S[o] = s), H(s), s = s.nextSibling;
        }
    }
    H(t);
    function $(i) {
      b(i);
      for (var s = i.firstChild; s; ) {
        var o = s.nextSibling, l = f(s);
        if (l) {
          var d = S[l];
          d && z(s, d) ? (s.parentNode.replaceChild(d, s), C(d, s)) : $(s);
        } else
          $(s);
        s = o;
      }
    }
    function ne(i, s, o) {
      for (; s; ) {
        var l = s.nextSibling;
        (o = f(s)) ? M(o) : O(
          s,
          i,
          !0
          /* skip keyed nodes */
        ), s = l;
      }
    }
    function C(i, s, o) {
      var l = f(s);
      if (l && delete S[l], !o) {
        var d = T(i, s);
        if (d === !1 || (d instanceof HTMLElement && (i = d, H(i)), a(i, s), y(i), ee(i, s) === !1))
          return;
      }
      i.nodeName !== "TEXTAREA" ? ae(i, s) : j.TEXTAREA(i, s);
    }
    function ae(i, s) {
      var o = te(i, s), l = s.firstChild, d = i.firstChild, k, v, m, x, g;
      e: for (; l; ) {
        for (x = l.nextSibling, k = f(l); !o && d; ) {
          if (m = d.nextSibling, l.isSameNode && l.isSameNode(d)) {
            l = x, d = m;
            continue e;
          }
          v = f(d);
          var E = d.nodeType, w = void 0;
          if (E === l.nodeType && (E === N ? (k ? k !== v && ((g = S[k]) ? m === g ? w = !1 : (i.insertBefore(g, d), v ? M(v) : O(
            d,
            i,
            !0
            /* skip keyed nodes */
          ), d = g, v = f(d)) : w = !1) : v && (w = !1), w = w !== !1 && z(d, l), w && C(d, l)) : (E === Y || E == J) && (w = !0, d.nodeValue !== l.nodeValue && (d.nodeValue = l.nodeValue))), w) {
            l = x, d = m;
            continue e;
          }
          v ? M(v) : O(
            d,
            i,
            !0
            /* skip keyed nodes */
          ), d = m;
        }
        if (k && (g = S[k]) && z(g, l))
          o || F(i, g), C(g, l);
        else {
          var I = p(l);
          I !== !1 && (I && (l = I), l.actualize && (l = l.actualize(i.ownerDocument || u)), F(i, l), $(l));
        }
        l = x, d = m;
      }
      ne(i, d, v);
      var K = j[i.nodeName];
      K && K(i, s);
    }
    var h = t, P = h.nodeType, X = n.nodeType;
    if (!D) {
      if (P === N)
        X === N ? z(t, n) || (R(t), h = ve(t, ue(n.nodeName, n.namespaceURI))) : h = n;
      else if (P === Y || P === J) {
        if (X === P)
          return h.nodeValue !== n.nodeValue && (h.nodeValue = n.nodeValue), h;
        h = n;
      }
    }
    if (h === n)
      R(t);
    else {
      if (n.isSameNode && n.isSameNode(h))
        return;
      if (C(h, n, D), L)
        for (var V = 0, re = L.length; V < re; V++) {
          var B = S[L[V]];
          B && O(B, B.parentNode, !1);
        }
    }
    return !D && h !== t && t.parentNode && (h.actualize && (h = h.actualize(t.ownerDocument || u)), t.parentNode.replaceChild(h, t)), h;
  };
}
var we = ge(ie);
const U = {
  silent: -1,
  error: 3,
  warning: 4,
  info: 6,
  debug: 7
};
class Ae {
  constructor(e = {}) {
    this.worker = null, this.connected = !1, this.logLevel = U[e.logLevel] ?? U.silent;
  }
  connect(e = {}) {
    if (this.connected) return;
    const t = e.wsPath || "/live";
    this.worker = new Worker(
      new URL(
        /* @vite-ignore */
        "/assets/arizona-worker-CNXg-y3W.js",
        import.meta.url
      ),
      { type: "module" }
    );
    const n = window.location.protocol === "https:" ? "wss:" : "ws:", r = window.location.host, c = window.location.pathname, f = window.location.search, p = encodeURIComponent(c), b = f ? encodeURIComponent(f.substring(1)) : "", T = `${n}//${r}${t}?path=${p}&qs=${b}`;
    this.worker.postMessage({
      type: "connect",
      data: { url: T }
    }), this.worker.onmessage = (y) => {
      this.handleWorkerMessage(y.data);
    };
  }
  sendEvent(e, t = {}) {
    this.connected && this.worker.postMessage({
      type: "send",
      data: {
        type: "event",
        event: e,
        params: t
      }
    });
  }
  sendEventTo(e, t, n = {}) {
    this.connected && this.worker.postMessage({
      type: "send",
      data: {
        type: "event",
        stateful_id: e,
        event: t,
        params: n
      }
    });
  }
  disconnect() {
    this.worker && (this.worker.terminate(), this.worker = null), this.connected = !1;
  }
  handleWorkerMessage(e) {
    const { type: t, data: n } = e;
    try {
      switch (t) {
        case "status":
          this.handleStatus(n);
          break;
        case "initial_render":
          break;
        case "html_patch":
          this.handleHtmlPatch(n);
          break;
        case "error":
          this.handleWorkerError(n);
          break;
        case "reload":
          this.handleReload(n);
          break;
        case "reply":
          this.handleReply(n);
          break;
        case "redirect":
          this.handleRedirect(n);
          break;
        default:
          this.handleUnknownMessage(e);
      }
    } catch (r) {
      this.error("Error handling worker message:", r);
    }
  }
  handleStatus(e) {
    e.status === "connected" ? (this.connected = !0, this.info("Connected to WebSocket")) : e.status === "disconnected" && (this.connected = !1, this.info("Disconnected from WebSocket")), this.dispatchArizonaEvent("status", e);
  }
  handleHtmlPatch(e) {
    this.debug("Applying HTML patch"), this.applyHtmlPatch(e.patch);
  }
  applyHtmlPatch(e) {
    const t = document.getElementById(e.statefulId);
    if (!t) {
      this.warning(`Target element not found: ${e.statefulId}`);
      return;
    }
    try {
      we(t, e.html, {
        onBeforeElUpdated(n, r) {
          return r.dataset?.arizonaUpdate === "false" ? !1 : !n.isEqualNode(r);
        }
      }), this.debug("Patch applied successfully"), t.dispatchEvent(
        new CustomEvent("arizona:patched", {
          detail: { patch: e }
        })
      );
    } catch (n) {
      this.error("Error applying HTML patch:", n);
    }
  }
  handleWorkerError(e) {
    this.error("Worker Error:", e.error), this.dispatchArizonaEvent("error", e);
  }
  handleReload(e) {
    switch (e.file_type) {
      case "css":
        this.info("CSS file changed. Refreshing stylesheets without page reload..."), document.querySelectorAll('link[rel="stylesheet"]').forEach((t) => {
          const n = t.href.split("?")[0];
          t.href = `${n}?t=${Date.now()}`;
        });
        break;
      default:
        this.info(`${e.file_type || "File"} changed. Reloading page...`), window.location.reload();
    }
  }
  handleReply(e) {
    this.debug("WebSocket reply:", e), this.dispatchArizonaEvent("reply", e);
  }
  handleRedirect(e) {
    this.info("Redirecting to:", e.url), this.dispatchArizonaEvent("redirect", e), window.open(e.url, e.options?.target, e.options?.window_features);
  }
  handleUnknownMessage(e) {
    this.warning("Unknown worker message:", e);
  }
  dispatchArizonaEvent(e, t) {
    document.dispatchEvent(
      new CustomEvent("arizonaEvent", {
        detail: { type: e, data: t }
      })
    );
  }
  isConnected() {
    return this.connected;
  }
  // Logging methods aligned with Erlang logger levels
  error(e, ...t) {
    console.error(`[Arizona] ${e}`, ...t);
  }
  warning(e, ...t) {
    this.logLevel >= U.warning && console.warn(`[Arizona] ${e}`, ...t);
  }
  info(e, ...t) {
    this.logLevel >= U.info && console.log(`[Arizona] ${e}`, ...t);
  }
  debug(e, ...t) {
    this.logLevel >= U.debug && console.log(`[Arizona] ${e}`, ...t);
  }
}
export {
  Ae as default
};
//# sourceMappingURL=arizona.min.js.map
